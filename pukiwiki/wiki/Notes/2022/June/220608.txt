#notemd
# Webinar Siemence Calibre

## Calibre nmDRC Recon Mode

  - Calibre  
    IC Physical Design Solution

  - Recon  
    Reconnaissance, the process of getting information about enemy
    forces or positions by sending out small groups of soldiers
    ([dictionary](https://dictionary.cambridge.org/dictionary/english/reconnaissance))
    
      - Auto Unselection
      - Gray Box Flow

<!-- end list -->

  - This is <span class="underline">signoff DRC</span>
  - Issues of DRC Analysis whi
      - Too many errors and TAT

## Calibre nmLVS Recon Mode

  - ERC  
    Electrical Rule Check, check if exists dangerous connections:
    
      - From
        ([Quora](https://www.quora.com/What-is-the-role-of-ERC-in-VLSI)):
        1.  the output is short
        2.  the input is unconnected (open)
        3.  the gates are connected directly to supplies
        4.  any possible ESD damage, etc.

  - LVS check  
    Layout vs Schematic check

  - TAT  
    Turn Around Time, Requred time to implementation

  - SI  
    Short Isolation
    
      - short must be resolve as soon as possible

<!-- end list -->

  - ERC Pathchk/Softchk ??
    [manual](https://manualzz.com/doc/6819227/pdf-erc-pathchk)

## Calibre RealTime Customize/Digital

  - IP merge flow

  - Issues on Top level DRCs
    
      - Abstract blocks which represent IP macros may have interface
        error

  - Fill flow
    
      - SmartFill generate FILL and deliver to P\&R tools

  - Voltage considered DRC flow alpha

  - customize :: analog (Minato-san said)

# Tech Sharing

## layout shrink

### Sakata-san

  - SVT, LVT high utilization
  - one site space b/w tapfiller & boundary cell
      - GDS  
        Graphic Data System

### Otsuji-san

  - Innovus vs PT miscorrelation
      - `cts_update_io_latency`
  - IO latency

### Yabuuchi-san

  - `resize_floorplan`
  - undesired separated block

## DFT flow study Yamauchi-san

### New DFT flow

  - MBIST + Scan circuit
      - Memory Built-In Self Test
  - ATPG :: Automatic Test Pattern Generation

### Study

  - Sanity Check
      - `negedge_ff_check`
      - `clock_mux_control_check`
      - `multiple_scan_clock_check`
  - DFT initial check

## DDR PHY Sassa-san

  - Skew balancing
  - Flip Byte macro \<=\> PLL
  - 12FFC :: 12nm FinFET Compact Technology
  - 28HPCP :: 28HPC+ Process ?
  - IR Drop ??
  - shielding ??

## Mixed Placer Takemoto-san

  - Test on leap mind
  - DRC violation

### Halos

  - Blockages which is used around the macros <span class="underline">to
    prevent congestion</span> in later stages. If we move macro, halos
    move with it.
  - Routing Halos can prevent signal integrity issues around blocks.

## USB Test Lin-san

  - UTMI  
    Universal Serial Bus (USB) Transceiver Macro Cell Interface
    
      - a two wire, Bi-directional Serial interface.

  - SuperSpeed  
    USB 3.x

<!-- end list -->

  - PHY vs Pad
  - Check List ??
  - Pseudo timing arc

### Shielding

  - to avoid noise interference between signals

## Useful Skew Sakurada-san

  - Register-removal
  - SVF :: Synopsys Formality File

# Self Study

## Questions

  - `all_path_edge`
  - Physically aware ECO

## Physically Aware ECO

  - on PrimeTime
      - Fix DRC violations using inserting buffer
      - Utilize `add_buffer_on_route` for ICC2

## Design Flow

### Flow

1.  DC: RTL Synthesis
    1.  Load design and technology data
    2.  Apply timing constraints
    3.  Synthesize the design
    4.  Analyze results
    5.  Write out design data
2.  ICC II
    1.  Design & Timing Setup
    2.  Floorplan Definition
    3.  Placement & Optimization
    4.  CTS & Optimization
        1.  CTS Setup: Clock tree structure
        2.  Configure CTS: Optimization algorithms (Classic CTS vs CCD)
        3.  clock_opt
    5.  Routing & Optimization
        1.  Pre-routing checks and setup
            1.  Check for routing readiness (ready-ness)
            2.  Control secondary PG pin routing
                  - NDRs  
                    Non-default Routing rules
            3.  Enable redundant via insertion
            4.  Increase wire/via optimization level
            5.  Enable antenna fixing
            6.  Apply route guide/blockage
            7.  Control the scope for rerouting
            8.  Enable crosstalk analysis and prevention
        2.  Routing
            1.  Route signal nets
            2.  Check DRCs
            3.  Incremental Routing
        3.  Optimization and Reroute
            1.  Optimiza the design for timing, cosstalk and power
            2.  Incremental Routing
        4.  (ECO Fusion with PrimeTime/StarRC)
    6.  Signoff \< Today's Webinar

### By Top Level Implementation

  - means performing:
      - placement
      - CTS
      - routing

### timing-driven routing

  - timing-critical nets are prioritized

### LVS Check

  - `check_lvs` in icc2
  - LVS check :: Layout vs Schematic check
      - compares the extracted netlist from the layout to the original
        schematic netlist to determine if they match.

## CTS

### Ideal Clock Latencies vs Propagated Clock Sources/Objects

  - ICC II automatically applies the `set_propagated_clock`
  - `set_propagated_clock [al1_clocks]` is dangerouse

### clock net logical DRC fixing on scenarios

### scan path

### CRPR

### Local skew vs Global skew

### Multi-Voltage

### Path group

  - associated with that path’s capturing clock
  - User-defined path group

### CCD power / area / clock power recovery

  - necessary to choose between <span class="underline">power</span> or
    <span class="underline">area</span> recovery
  - SAIF :: Switching Activity Interchange Format, power recovery use
    SAIF files

### Global Route Optimization

### Report

  - `report_clock_qor -type structure`

## Synthesize Flow

### Logic Optimization

  - DesignWare components are a group of IPs
  - Arithmetic expression optimization + CSA Transformation :: makes
    logics smaller and faster arithmetic circuit
  - Three levels of optimization in compile_ultra:
      - RTL Description or unmapped ddc
    <!-- end list -->
    1.  Architectural level of high level synthesis
    2.  Logic level or GTECH optimization
          - GTECH  
            Generic TECHnology, a technology-independent design
    3.  Gate-level or mapping optimization
    <!-- end list -->
      - Optimized Netlist

### Critical Path Re-Synthesis

### Load Splitting and Logic Duplication

  - reduces critcal path delay

### Regiter repositioning and Auto ungrouping

  - improves combo and sequential logic optimization
      - Logic optimization
  - but effect to Formality

### Preservation of Sub-Block pins

### Boundary Optimization

### Design Partitioning

  - defined in `module`
  - "hierarchical floorplanning"
      - Logic hierarchy vs Physical hierarchy
  - (hard) macro :: physical hierarchy

### Adaptive Retiming

  - moving, splitting, or merging registers through the cones of logic
  - perform s only on potential timing-critical paths

### High effort timing optimization

  - Prioritizing setup timing over DRCs

  - Test-ready synthesis

  - Disabling DRC fixing on clock net directly connected to register
    clock pins

### User-defined path groups

  - Optimization may stop because of:
      - difficult improvement path
  - User-defined path groups can prevent it.

### Tolological mode

  - performs under-the-hood (i.e. in its internal workings) P\&R
    estimation to calculate net RCs

  - [edaboard](https://www.edaboard.com/threads/whats-the-difference-between-running-the-dc-in-normal-vs-the-topographical-mode.228595/)
    
    > Simple DC uses WireLoadModel from the .db file. DC Topo takes as
    > an input floorplan (from DEF file or from Milkyway) and TLU files
    > (that keeps info for accurate RC calculation). Than it performs
    > synthesis (as DC does), but also it performs coarse placement, in
    > order to estimate distance between cells, and calculate real RC
    > from this distance and TLU files. So, DC performs only synthesis
    > based on WLM, DC topo performs synthesis+placement based on TLU
    > files.

### IR Drop

  - IRが大きくなると，回路ブロックの電源電圧が動作電圧以下になり，誤動作 を生じる．
  - Cause :: the <span class="underline">resistivity of metal
    wire</span> is high or the <span class="underline">amount of
    current</span> following through the power net is high.
      - Poor design of power delivery network (lesser metal width and
        more separation in the power stripes)
      - Inadequate via in power delivery network
      - Inadequate number of decap cells availability
      - **High cell density and high switching in a particular region**
      - High impedance of the power delivery network
      - Rush current
      - Insufficient number of voltage sources
      - High RC value of the metal layer used to create the power
        delivery network
  - 対策としては，配線幅を太くする方法などがある．最近では金属配線をアル
    ミから銅に変更することによって，配線材料の抵抗を減少させる方法も採用
    されている．

### Inrush current ?

  - input surge current or switch-on surge
  - is the maximum, instantaneous input current drawn by an electrical
    device when first turned on.

### Bird View of Design Flow

![](../img/design-flow-bird-view.png)
