#notemd
# Status Meeting

  - LEQs  
    Logically Equivalent cells
    
      - not used thesedays
      - different from multi-Vt
      - A single LEQ for stable manufacturing

  - EEQs  
    electorically equivalent cells

  - Cell internal pin  
    Cell = IP?
    
      - `report_clock_qor -type structure`

  - ETM
    
      - full flat

## Takemoto-san

  - Tap cells  
    location is scripted,

  - Tie cells  
    specified by customer
    
      - no Mapping in Synthesis, but place stage
      - close to

  - Terminal cells  
    physical port
    
      - port vs terminal

<!-- end list -->

  - M1 vs VIA1

  - net vs route
    
      - net  
        verilog, owner
      - route  
        physical

  - Pin Guide
    
      - which layer to assign
      - Square "I" :: describe input port

  - Rouring Guide

  - Scan FF vs FF
    
      - name  
        SDF\* vs DF\*

  - Multi-bit :: only Scan FF is provided in TSMC

  - Filler cell :: only power, may Gate-array

  - GDCAP :: G de-capacitance

  - Boundary cell :: 終端セル, auto insertion

  - Utilization
    
      - ICC II includes some physical only cells

# Self Study

  - Timing Margin  
    clock period minus key factors

## PrimeTime Student Guide Unit i

### Words List

  - SPEF  
    Standard Parasitic Exchange Format (IEEE Standard, ASCII)
    
      - Galaxy Parasitic Database (GPD)
      - Standard Parasitic Exchange Format (SPEF)
      - Detailed Standard Parasitic Format (DSPF)
      - Reduced Standard Parasitic Format (RSPF)
      - Milkyway (PARA)

  - GPD  
    Synopsys Galaxy Parasitic Database (Binary)

  - MIM  
    Multiply Instantiated Module

  - PBA  
    Path Based Analysis

  - POCV  
    Parametric On Chip Variation analysis

  - AWP  
    Advanced Waveform Propagation

  - CCS  
    Composite Current Source model for delay and noise (Liberty
    Standard)

  - QTM  
    Quick Timing Model (a placeholder model when a block netlist is not
    ready)

  - ETM  
    Extracted Timing Model (a netlist convertedinto a single library
    cell — shields details of an IP — can be used during synthesis and
    P\&R as well as for STA)

  - DMSA  
    Distributed Multi Scenario Analysis

  - ECO  
    Engineering Change Order

### Unit i

  - PrimeTime  
    STA tool
  - Implementation  
    RTL Synthesis (DCG) + Place & Route (ICC II)

<!-- end list -->

  - STA
      - exhaustive  
        complete and including everything
    <!-- end list -->
      - Faster than Tx level (spice) simulation
      - Path Based
      - Constraint Driven
  - *AWP with CCS libraries can restore timing accuracy due to waveform
    distortions*

## Unit 1

  - PT verifies a number of timing checks
      - constraint check  
        by user. e.g. `set_output_delay`
      - library check  
        by vendor in the library. e.g. `setup/hold`
    <!-- end list -->
      - `report_analysis_coverage`
  - Path Based
      - start points  
        clock pins of registers / input ports
      - end points  
        input pins of registers / output ports
    <!-- end list -->
      - `report_global_timing`
  - Setup Timing / Max Delay Analysis
      - `report_timing -delay max`
          - Incr 0.00 means timing of rise clock
          - Incr 4.00 means timing of second rise clock
  - Hold Timing / Min Delay Analysis
      - `report_timing -delay min`
          - Incr 0.00 means timing rise clock
  - Input Data
    1.  Netlist
    2.  libraries
    3.  Design Constraints
    4.  Net parasitics (SPEF or GPD)
  - Flow
    1.  Load Design + Library
        
          - `read_verilog`
          - `current_design`
          - `set search_path`
          - `set link_path`
          - `link_design`
    
    2.  Read Parasitics
        
          - `read_parasitic -format SPEF|GPD|PARA...`
          - `read_parasitic -path ...`
          - `report_annotated_parasitics`
    
    3.  Source Constraints
        
          - `read_sdc -echo $constraint_file` for sdc
          - `source -echo $constraint_file` for tcl
          - `check_timing -verbose`
          - `report_clock -skew -attribute`
          - `report_port -verbose`
          - `report_design`
          - `report_exceptions -ignored`
              - false paths / multi-cycle paths / set_maxdelay
                & set_mindelay
          - `report_case_analysis`
    
    4.  Generate Report & Analysis
        
          - `update_timing [-full]`
        
          - `report_global_timing [-pba]`
        
          - `report_qor [-pba]`
        
          - `report_analysis_coverage` as a sanity check
        
          - `report_constraint -all_violations [-pba]`
        
          - `report_disable_timing`
        
          - detailed report
            
            ``` tcl
            report_timing \
                -input_pins -path full_clockexpanded —nets \
                -delay min_max -group $grp -maxpaths $max \
                -slack_less $positivenumber \
                -exceptions all <other options>
            # PBA mode
            report_timing -pba_mode path | exhaustive $recalculated_path
            ```
    
    5.  Save Session
        
          - `save_session $session_directory`
          - `restore_session $session_directory`
    
    6.  Exit
        
        ``` tcl
        redirect -tee $exit_file { 
            print_message_info; # Messages during run
            quit;
        }
        ```
  - Setup File
      - `.synopsys_pt.setup`
      - RMGEN \> output pt.tcl ?
          - common_setup.tcl
          - pt_setup.tcl
          - pt_script/pt.tcl
  - ptprocheck :: syntax checker

## Lab 1

srun: error: ioctl(TIOCGWINSZ): Inappropriate ioctl for device srun:
error: Not using a pseudo-terminal, disregarding –pty option

  - `restore_session` accept switches?
      - Yes, it accepts a session name,allowing a userto specify which
        of many savedsessionsto restore.
  - the asterisk to the left of the library (from `list_libraries`)
    indicates <span class="underline">main library</span>
  - `check_timing -verbose` lists the unconstrained endpoints
  - Can any of the timing updates be avoided?
      - Yes, there is an `update_timing` both before and after
        `set_propagated_clocks` the one before `set_propagated_clocks`
        is unnecessary. One `update_timing` commandis in pt.tcl — the
        other is in a constraint file (orea_ptother.tcl)
        sourced by orca_ptconstraints which is sourced by
        pt.tel
  - skew can be calculated :: **diff between propagated clock network
    delay**

## Unit 2

  - Requirement for Complete STA  
    validation commands:
    
      - `check_timing`
      - `report_analysis_coverage`

<!-- end list -->

  - Constraint Warnings by `check_timing`:
      - No Input Delay
          - Unnecessary to constrain:
            1.  use `set_case_analysis` : e.g. A port driving the select
                switch of a MUX.
            2.  the path will not be active in the analysis
      - No Output Delay
          - If the port is used to send an outgoing clock
      - No Clock
          - `set_sense -stop_propagation` blocks clock signals to
            propagate
  - Untested Timing Check by `report_analysis_coverage`:
      - false_paths  
        asynchronous or exclusive clock groups.
      - user_disabled  
        vendor specified timing check for a specific cell or on library
        cell.
      - constant_disabled  
        a user specified `set_case_analysis` or to a signal tied high or
        low.
      - no_paths  
        caused by `set_disable_timing`
  - Determine the reason of <span class="underline">No Clock</span>
    Warning:
      - `all_fanin`  
        Traces timing arcs, passing through hierarchy, stopping at:
          - Input ports
          - CLK flop pins, G and D latch pins
          - Cell output pins whereall timing T_PLL arcs are
            disabled or missing
    <!-- end list -->
      - `report_cell -connections -verbose F2` to find the start point
        cell details
      - Sketch
      - `get_attribute [get_pins F2/CLK] clock` :
          - returns all clocks that pass through the given pin or port
      - `get_attribute [get_clocks Clk1] clock_network_pins` :
          - all the pins in the clock network for a given clock.
  - Find disabled Timing arcs
      - `report_disable_timing [all_fanin -only_cells -to FI/CLK -flat]`
        :
          - identify disabled arcs along the clock path:
      - `report_case_propagation [get_pins U23/s]` :
          - identify user specified case value
          - Traces the fanin back to the startpoint.
  - Dismiss clock gating logic
      - `all_fanin -start -flat -to F1/CLK`
          - returns the input pins of L1
      - `report_cell -connections -verbose L1`
          - sketch a schematic
      - (optional) `report_cell —connections -verbose {all_fanout
        -levels
                1 -flat -only —from L1/Q]`
          - expand sketch one level at a time
      - `all_fanout -flat -endpoints -from L1/Q`
          - Traces timing arcs, passing through hierarchy, stopping at:
              - Output ports
              - Input flop and latch pins
              - Cell input pins whereall timing arcs are disabled or
                missing
  - Clock Constraints
  - Clock jitter
      - `set_clock_jitter` `report_clock_jitter` `remove_clock_jitter`
      - Cycle to cycle jitter ??
      - Duty-Cycle jitter
      - No jitter
  - Interface path
      - input delay  
        `set_input_delay` = input external delay
    
      - output delay  
        `set_output_delay`
        
        ``` tcl
        set_input_delay [expr {1.60 + 1.0}] -max \
            -network_latency_included \
            -source_latency_included -clock Clk [get_ports A]
        set_output_delay [expr {1.4 - 1.0}] -max -clock Clk \
            -network_latency_included \
            -source_latency_included [get_ports M]
        ```

## Lab 2

``` tcl
report_timing -from "pad[0]"
```
