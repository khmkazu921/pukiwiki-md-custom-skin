#notemd
#notemd

# Presentation Slide

```tcl
proc funnyProc {value} {
  if {$value} {
    return "TRUE"
#  } elseif {[puts "COMMENT :)"] == ""} {
#    return "COMMENT"
  } else {
    return "FALSE"
  }
  return "IT'S IMPOSSIBLE!!!"
}

proc read_list {filename} {
    set f [open $filename r]
    set tmp_list [split [read $f] "\n"]
    set result [regsub -all \{|\} $tmp_list ""]
    return $result
    close $filename
}

proc print_list { items } {
    foreach item $items {
    echo ${item}
    }
}

proc print_file_list { items } {
    foreach item $items {
    echo [regsub -all ^.*/ $item ""]
    }
}
```

```tcl
set_driving_cell -lib_cell BUFFD8BWP6T16P96CPDULVT [all_inputs ]
set_load [get_attribute [index_collection [get_lib_pins */BUFFD8BWP6T16P96CPDULVT/I] 0] pin_capacitance] [all_outputs ]
```

```tcl
set BASE_DIR /proj/ATEPairChip/RELEASE/Training_Phase1 
set LIB_DIR ${BASE_DIR}/Library
set SC_NDM [list ${LIB_DIR}/ndm/tcbn12ffcllbwp6t16p96cpd_c_ccs.ndm]
set MEM_NDM [list ${LIB_DIR}/ndm/sram_macros.ndm]
set REFERENCE_LIBRARY [concat ${LIB_DIR}/ndm_20210611a/tech_only.ndm $SC_NDM $MEM_NDM]
set TECH_FILE         ""
;# A technology file; TECH_FILE and TECH_LIB are mutually exclusive ways to specify technology information; 
;# TECH_FILE is recommended, although TECH_LIB is also supported in ICC2 RM. 
# Modified @220624
set TECH_LIB          ${LIB_DIR}/ndm_20210611a/tech_only.ndm
;# Specify the reference library to be used as a dedicated technology library;
;# as a best practice, please list it as the first library in the REFERENCE_LIBRARY list
set SVT_LIB [list ${LIB_DIR}/sc/6T/*16p*/120c/TSMCHOME/digital/Front_End/timing_power_noise/CCS/*/tcbn12ffcllbwp6t16p96cpdssgnp0p72vm40c_hm_ccs.db]
set LVT_LIB [list ${LIB_DIR}/sc/6T/*16p*/120c/TSMCHOME/digital/Front_End/timing_power_noise/CCS/*/tcbn12ffcllbwp6t16p96cpdlvtssgnp0p72vm40c_hm_ccs.db]
set MEM_LIB [list ${LIB_DIR}/mem/shdspsb/ts1n12ffcll*/CCS/*m4s_130a_ssgnp0p72vm40c.db]
set LINK_LIBRARY "*"
foreach path [concat $SVT_LIB $MEM_LIB] {
    foreach db [glob $path] {
    set LINK_LIBRARY [concat $LINK_LIBRARY $db]
    }
}
print_file_list $LINK_LIBRARY

create_lib $DESIGN_LIBRARY -tech $TECH_FILE -use_technology_lib $TECH_LIB \
    -ref_libs $REFERENCE_LIBRARY
create_lib -help
Usage: create_lib    # Create a library
        [-technology tech_path]
                               (Tech file path)
        [-use_technology_lib tech_lib_name]
                               (Tech library name)
        [-ref_libs paths]      (Reference library paths)
```

## create_lib

```tcl
#EXAMPLES
#The following example creates a library named r4000 in the current directory that uses the tcbn90g.tf technology file.

prompt> create_lib -technology LIBS/TECH/tcbn90g.tf r4000
Information: Loading technology file '/usr/LIBS/TECH/tcbn90g.tf' (FILE-007)
{r4000}
prompt> current_lib
{r4000}

#The following example creates a library named r4000 in the current directory that uses the tcbn90g.tf technology file and has a scale factor of 4000.

prompt> create_lib -technology LIBS/TECH/tcbn90g.tf r4000 -scale_factor 4000
Information: Loading technology file '/usr/LIBS/TECH/tcbn90g.tf' (FILE-007)
{r4000}
prompt> current_lib
{r4000}
prompt> get_attribute [current_lib] scale_factor
4000

#The following example creates a library named top_lib in the ./lib_dir directory that uses the tcbn90g.tf technology file.

prompt> create_lib -technology LIBS/TECH/tcbn90g.tf lib_dir/top_lib
Information: Loading technology file '/usr/LIBS/TECH/tcbn90g.tf' (FILE-007)
{top_lib}

# The following example creates a library named design_lib in the /home/user directory that uses the my_tech.tf technology file.

prompt> create_lib -technology my_tech.tf /home/user/design_lib
Information: Loading technology file 'my_tech.tf' (FILE-007)
{design_lib}

#The following example creates a sparse library named top_sparse_lib based on the design library top_lib in the /home/user directory.

prompt> create_lib -base_lib /home/user/top_lib top_sparse_lib
Information: Creating Sparse View library 'top_sparse_lib' with base 
library '/home/user/top_lib'. (NDM-103)
{top_sparse_lib}

#The following example creates a library named design_lib and automatically creates cell libraries for it. The cell libraries are created based on the logic library files specified in the link_library variable and the physical library specified with the -ref_libs option.

prompt> set_app_var link_library \
   "* 1_pvt1.db 1_pvt2.db 2_pvt1.db 2_pvt2.db"
prompt> create_lib -technology my_tech.tf /home/user/design_lib \
   -ref_libs frame_only.ndm
 ... run lm_shell to build reference libraries.
 ................................................................

#Information: Successfully built 3 reference libraries: 1.ndm 2.ndm 

EXPLORE_physical_only.ndm
{design_lib}
```

## Derate

```tcl
set corner1               "ss72_cworst_CCworst_T_m40c" 
set corner2                             "ss72_rcworst_CCworst_T_m40c"
set corner3                             "ss72_cworst_CCworst_T_125c" 
set corner4                             "ss72_rcworst_CCworst_T_125c"

set ss_all_corners [list $corner1 $corner2 $corner3 $corner4]
set_timing_derate -corners $ss_all_corners -cell_delay -clock -late  [expr 1.0 + $cell_ocv_clock/100]

set_timing_derate -corners $ss_all_corners -cell_delay -data  -late  [expr 1.0 + $cell_ocv_data/100]
set_timing_derate -corners $ss_all_corners -cell_delay -data  -early [expr 1.0 - $cell_ocv_data/100]
set_timing_derate -corners $ss_all_corners -net_delay  -clock -late  [expr 1.0 + $wire_ocv_clock/100]
set_timing_derate -corners $ss_all_corners -net_delay  -clock -early [expr 1.0 - $wire_ocv_clock/100]
set_timing_derate -corners $ss_all_corners -net_delay  -data  -late  [expr 1.0 + $wire_ocv_data/100]
set_timing_derate -corners $ss_all_corners -net_delay  -data  -early 1.0

set corners_m40c [list $corner1 $corner2]
set corners_125c [list $corner3 $corner4]

set_timing_derate -corners $corners_m40c   -cell_delay -clock -early [expr 1.0 - ($cell_ocv_clock+$vt_ocv_m40c)/100]
set_timing_derate -corners $corners_125c   -cell_delay -clock -early [expr 1.0 - ($cell_ocv_clock+$vt_ocv_125c)/100]
```

## set_parasitic_parameter

```tcl
set parasitic1                     "cworst_CCworst_T"
set tluplus_file($parasitic1)      "/proj/ATEPairChip/RELEASE/Training_Phase1/Library/tech/synopsys/tlu+/1p11m_2xa1xd3xe2y2r_mim_ut-alrdl/1.0p1a/cworst/Tech/cworst_CCworst_T/cln12ffc_1p11m_2xa1xd3xe2y2r_mim_ut-alrdl_cworst_CCworst_T.tluplus"
set layer_map_file($parasitic1)    "/proj/ATEPairChip/RELEASE/Training_Phase1/Library/tech/synopsys/pr_techfile/tn12clpr001s1/1_0a/PR_tech/Synopsys/StarRCMap/starrc_2xa1xd3xe2y2r_1.0a.map"
set parasitic2                     "rcworst_CCworst_T"
set tluplus_file($parasitic2)      "/proj/ATEPairChip/RELEASE/Training_Phase1/Library/tech/synopsys/tlu+/1p11m_2xa1xd3xe2y2r_mim_ut-alrdl/1.0p1a/rcworst/Tech/rcworst_CCworst_T/cln12ffc_1p11m_2xa1xd3xe2y2r_mim_ut-alrdl_rcworst_CCworst_T.tluplus"
set layer_map_file($parasitic2)    "/proj/ATEPairChip/RELEASE/Training_Phase1/Library/tech/synopsys/pr_techfile/tn12clpr001s1/1_0a/PR_tech/Synopsys/StarRCMap/starrc_2xa1xd3xe2y2r_1.0a.map"
foreach p [list $parasitic1 $parasitic2] {  
    puts "RM-info: read_parasitic_tech -tlup $tluplus_file($p) -layermap $layer_map_file($p) -name $p"
    read_parasitic_tech -tlup $tluplus_file($p) -layermap $layer_map_file($p) -name $p
}


set_parasitic_parameters -corners ss72_cworst_CCworst_T_m40c -early_spec $parasitic1 \
    -late_spec $parasitic1 -library tech_only
set_temperature -corners ss72_cworst_CCworst_T_m40c -40 -min -40
set_voltage     -corners ss72_cworst_CCworst_T_m40c 0.72 -min 0.72
set_process_number -corners ss72_cworst_CCworst_T_m40c 1
set_parasitic_parameters -corners ss72_cworst_CCworst_T_125c -early_spec $parasitic1 \
    -late_spec $parasitic1 -library tech_only
set_temperature -corners ss72_cworst_CCworst_T_125c 125 -min 125
set_voltage     -corners ss72_cworst_CCworst_T_125c 0.72 -min 0.72
set_process_number -corners ss72_cworst_CCworst_T_125c 1
set_parasitic_parameters -corners ss72_rcworst_CCworst_T_m40c -early_spec $parasitic2 \
    -late_spec $parasitic2 -library tech_only
set_temperature -corners ss72_rcworst_CCworst_T_m40c -40 -min -40
set_voltage     -corners ss72_rcworst_CCworst_T_m40c 0.72 -min 0.72
set_process_number -corners ss72_rcworst_CCworst_T_m40c 1
set_parasitic_parameters -corners ss72_rcworst_CCworst_T_125c -early_spec $parasitic2 \
    -late_spec $parasitic2 -library tech_only
set_temperature -corners ss72_rcworst_CCworst_T_125c 125 -min 125
set_voltage     -corners ss72_rcworst_CCworst_T_125c 0.72 -min 0.72
set_process_number -corners ss72_rcworst_CCworst_T_125c 1
```

## fanout

```tcl
set_app_options -name opt.tie_cell.max_fanout -value 8
```

# Warnings

```text
-------------------------------------------------------------
 Gate level 2 clock tree synthesis
 driving pin = storeAdma/amemReader/axi4WriteUnalignedAdapter/writeDataQueue/impl/pckg_clock_midfix_313_suffix/latch/Q
 Clocks:
     clock (func)
 Design rule constraints:
     max transition  = 0.060000
     max capacitance = 0.600000
 Number of load sinks = 29
 Number of ignore points = 0
Warning: Gate 'storeAdma/amemReader/axi4WriteUnalignedAdapter/writeDataQueue/impl/pckg_clock_midfix_313_suffix/latch' is not sizable because of lib_cell dont_touch. (CTS-041)
 Added 2 Repeaters. Built 2 Repeater Levels
 Phase delay: storeAdma/amemReader/axi4WriteUnalignedAdapter/writeDataQueue/impl/pckg_clock_midfix_313_suffix/latch/CP : (0.154 0.145) : skew = 0.009
-------------------------------------------------------------
```
